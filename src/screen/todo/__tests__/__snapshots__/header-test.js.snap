// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TodoHeader clicks register button without entering fields matches snapshot 1`] = `
<View
  style={
    Array [
      Object {
        "borderBottomLeftRadius": 30,
        "borderBottomRightRadius": 30,
        "height": 85,
        "paddingHorizontal": 10,
        "paddingTop": 10,
        "zIndex": 1,
      },
      Object {
        "backgroundColor": "#f6f7f8",
      },
    ]
  }
  testID="todo-header"
>
  <Text
    style={
      Array [
        Object {
          "fontSize": 13,
        },
        Object {
          "color": "#000000",
        },
      ]
    }
  >
    What do you need to do?
  </Text>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "row",
        },
        Object {
          "marginHorizontal": 0,
          "marginTop": 5,
        },
      ]
    }
    testID="name-input"
  >
    <TextInput
      onBlur={[Function]}
      onChangeText={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 1,
            "height": 35,
            "paddingBottom": 0,
            "paddingTop": 0,
            "textAlignVertical": "center",
            "width": "100%",
          },
          Array [
            Object {
              "borderRadius": 5,
              "borderWidth": 0,
            },
            Object {
              "backgroundColor": "#000000",
            },
          ],
          Object {
            "borderColor": "red",
            "borderWidth": 1,
          },
          Object {
            "backgroundColor": "#e4dfa7",
          },
        ]
      }
      testID="input"
      value=""
    />
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "textAlignVertical": "center",
          "top": 2,
          "zIndex": 1,
        }
      }
      testID="icon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontSize": 30,
            },
            undefined,
            Object {
              "fontFamily": "Material Design Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        󰐕
      </Text>
    </View>
  </View>
</View>
`;

exports[`TodoHeader matches snapshot 1`] = `
<View
  style={
    Array [
      Object {
        "borderBottomLeftRadius": 30,
        "borderBottomRightRadius": 30,
        "height": 85,
        "paddingHorizontal": 10,
        "paddingTop": 10,
        "zIndex": 1,
      },
      Object {
        "backgroundColor": "#f6f7f8",
      },
    ]
  }
  testID="todo-header"
>
  <Text
    style={
      Array [
        Object {
          "fontSize": 13,
        },
        Object {
          "color": "#000000",
        },
      ]
    }
  >
    What do you need to do?
  </Text>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "row",
        },
        Object {
          "marginHorizontal": 0,
          "marginTop": 5,
        },
      ]
    }
    testID="name-input"
  >
    <TextInput
      onBlur={[Function]}
      onChangeText={[Function]}
      style={
        Array [
          Object {
            "borderWidth": 1,
            "height": 35,
            "paddingBottom": 0,
            "paddingTop": 0,
            "textAlignVertical": "center",
            "width": "100%",
          },
          Array [
            Object {
              "borderRadius": 5,
              "borderWidth": 0,
            },
            Object {
              "backgroundColor": "#000000",
            },
          ],
          undefined,
          Object {
            "backgroundColor": "#e4dfa7",
          },
        ]
      }
      testID="input"
      value=""
    />
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "textAlignVertical": "center",
          "top": 2,
          "zIndex": 1,
        }
      }
      testID="icon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontSize": 30,
            },
            undefined,
            Object {
              "fontFamily": "Material Design Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        󰐕
      </Text>
    </View>
  </View>
</View>
`;
